{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "tejaladf"
		},
		"triggeredInsan_properties_JustDoCopy_parameters_SourceFile": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"triggeredInsan_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/f644db40-4eb4-448a-a29f-5e1cb52a783e/resourceGroups/tejallti/providers/Microsoft.Storage/storageAccounts/tejalltistorageacc"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Copy data Assignment 2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_1tr",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "."
							},
							{
								"name": "Destination",
								"value": "tejalcontainer//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select c.FirstName+c.LastName 'Name',s.OrderDate,s.SalesOrderID,p.Name ' ProductName' from (([SalesLT].[Customer] c inner join [SalesLT].[SalesOrderHeader] s on (s.CustomerID=c.CustomerID)) inner join [SalesLT].[SalesOrderDetail] d on s.SalesOrderID = d.SalesOrderID) inner join [SalesLT].[Product] p on p.ProductID=d.ProductID",
								"partitionOption": "None"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "setOfObjects"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"path": "$['Name']"
										}
									},
									{
										"source": {
											"name": "OrderDate",
											"type": "DateTime"
										},
										"sink": {
											"path": "$['OrderDate']"
										}
									},
									{
										"source": {
											"name": "SalesOrderID",
											"type": "Int32"
										},
										"sink": {
											"path": "$['SalesOrderID']"
										}
									},
									{
										"source": {
											"name": " ProductName",
											"type": "String"
										},
										"sink": {
											"path": "$[' ProductName']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_1tr",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_1tr",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-04-04T15:58:12Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IncrementalCopyPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupOldWaterMarkActivity",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "WatermarkDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LookupNewWaterMarkActivity",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select MAX(LastModifytime) as NewWatermarkvalue from data_source_table",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SourceDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "IncrementalCopyActivity",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupOldWaterMarkActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LookupNewWaterMarkActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select * from data_source_table where LastModifytime > '@{activity('LookupOldWaterMarkActivity').output.firstRow.WatermarkValue}' and LastModifytime <= '@{activity('LookupNewWaterMarkActivity').output.firstRow.NewWatermarkvalue}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SinkDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "StoredProceduretoWriteWatermarkActivity",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "IncrementalCopyActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_write_watermark]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@{activity('LookupNewWaterMarkActivity').output.firstRow.NewWatermarkvalue}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": {
										"value": "@{activity('LookupOldWaterMarkActivity').output.firstRow.TableName}",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabaseLSSample",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-04-04T17:02:47Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/JustDoCopy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "BlobSourceDS",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "@pipeline().parameters.SourceFile"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SinkDS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"SourceFile": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-04-04T18:28:34Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExcelSourceDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileServerLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"nameoffiles": {
						"type": "array",
						"defaultValue": [
							{
								"name": "customer"
							}
						]
					}
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": {
						"value": "@dataset().nameoffiles",
						"type": "Expression"
					},
					"location": {
						"type": "FileServerLocation",
						"fileName": "SalesData.xlsx"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_dk7')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileServerLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Customer",
					"location": {
						"type": "FileServerLocation",
						"fileName": "SalesData.xlsx"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "PinCode",
						"type": "String"
					},
					{
						"name": "Tel",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_ehs')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerLSADVWorks",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "DepartmentID",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "GroupName",
						"type": "nvarchar"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "HumanResources",
					"table": "Department"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerLSADVWorks",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "DepartmentID",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "GroupName",
						"type": "nvarchar"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "HumanResources",
					"table": "EmployeeDepartmentHistory"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCD-DataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlSampleDBSourceDS",
								"type": "DatasetReference"
							},
							"name": "SalesLtCustomer"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlDimCustomer",
								"type": "DatasetReference"
							},
							"name": "DimCustomer"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlDimCustomer",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Exists1"
						},
						{
							"name": "Lookup1"
						},
						{
							"name": "InsertedDate"
						},
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tCustomerID as integer,\n\t\tNameStyle as boolean,\n\t\tTitle as string,\n\t\tFirstName as string,\n\t\tMiddleName as string,\n\t\tLastName as string,\n\t\tSuffix as string,\n\t\tCompanyName as string,\n\t\tSalesPerson as string,\n\t\tEmailAddress as string,\n\t\tPhone as string,\n\t\tPasswordHash as string,\n\t\tPasswordSalt as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SalesLtCustomer\nsource(output(\n\t\tCustomerID as integer,\n\t\tTitle as string,\n\t\tFirstName as string,\n\t\tMiddleName as string,\n\t\tLastName as string,\n\t\tInsertedDate as timestamp,\n\t\tUpdatedDate as timestamp,\n\t\tHashKey as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimCustomer\nSalesLtCustomer derive(CreatedHash = sha1(FirstName+LastName+CompanyName)) ~> DerivedColumn1\nDerivedColumn1, DimCustomer exists(CreatedHash == HashKey,\n\tnegate:true,\n\tbroadcast: 'auto')~> Exists1\nExists1, DimCustomer lookup(SalesLtCustomer@CustomerID == DimCustomer@CustomerID,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup1\nLookup1 derive(InsertedDate = iif(isNull(InsertedDate), currentTimestamp(), InsertedDate),\n\t\tUpdatedDate = currentTimestamp()) ~> InsertedDate\nInsertedDate alterRow(upsertIf(true())) ~> AlterRow1\nAlterRow1 sink(input(\n\t\tCustomerID as integer,\n\t\tTitle as string,\n\t\tFirstName as string,\n\t\tMiddleName as string,\n\t\tLastName as string,\n\t\tInsertedDate as timestamp,\n\t\tUpdatedDate as timestamp,\n\t\tHashKey as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['CustomerID'],\n\tformat: 'table',\n\tmapColumn(\n\t\tCustomerID = SalesLtCustomer@CustomerID,\n\t\tTitle = SalesLtCustomer@Title,\n\t\tFirstName = SalesLtCustomer@FirstName,\n\t\tMiddleName = SalesLtCustomer@MiddleName,\n\t\tLastName = SalesLtCustomer@LastName,\n\t\tInsertedDate,\n\t\tUpdatedDate,\n\t\tHashKey = CreatedHash\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalSplit1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlSampleDBSourceDS",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Json1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "Json1",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "ConditionalSplit1"
						}
					],
					"script": "source(output(\n\t\tCustomerID as integer,\n\t\tNameStyle as boolean,\n\t\tTitle as string,\n\t\tFirstName as string,\n\t\tMiddleName as string,\n\t\tLastName as string,\n\t\tSuffix as string,\n\t\tCompanyName as string,\n\t\tSalesPerson as string,\n\t\tEmailAddress as string,\n\t\tPhone as string,\n\t\tPasswordHash as string,\n\t\tPasswordSalt as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nsource1 split(CompanyName=='A Bike Store',\n\tdisjoint: false) ~> ConditionalSplit1@(one, others)\nConditionalSplit1@one sink(input(\n\t\tName as string,\n\t\tOrderDate as string,\n\t\tSalesOrderID as string,\n\t\t{ ProductName} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1\nConditionalSplit1@others sink(input(\n\t\tName as string,\n\t\tOrderDate as string,\n\t\tSalesOrderID as string,\n\t\t{ ProductName} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_dk7')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_dk7",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "/SalesData.xlsx"
							},
							{
								"name": "Destination",
								"value": "tejalcontainer//copyexcel"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_dk7",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_dk7",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_dk7')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_ehs')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_ehs",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_ehs",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "dbo.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "dbo.@{item().destination.table}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"tableOption": "autoCreate"
										},
										"enableStaging": false,
										"validateDataConsistency": false,
										"translator": {
											"value": "@item().copyActivity.translator",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_ehs",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_ehs",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().destination.table"
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"table": "DimProduct"
								},
								"destination": {
									"table": "DimProduct"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"mappings": [
											{
												"source": {
													"name": "ProductKey",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "ProductKey",
													"type": "Int32"
												}
											},
											{
												"source": {
													"name": "ProductAlternateKey",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "ProductAlternateKey",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "ProductSubcategoryKey",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "ProductSubcategoryKey",
													"type": "Int32"
												}
											},
											{
												"source": {
													"name": "WeightUnitMeasureCode",
													"type": "String",
													"physicalType": "nchar"
												},
												"sink": {
													"name": "WeightUnitMeasureCode",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "SizeUnitMeasureCode",
													"type": "String",
													"physicalType": "nchar"
												},
												"sink": {
													"name": "SizeUnitMeasureCode",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "EnglishProductName",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "EnglishProductName",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "SpanishProductName",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "SpanishProductName",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "FrenchProductName",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "FrenchProductName",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "StandardCost",
													"type": "Decimal",
													"physicalType": "money",
													"scale": 4,
													"precision": 19
												},
												"sink": {
													"name": "StandardCost",
													"type": "Decimal"
												}
											},
											{
												"source": {
													"name": "FinishedGoodsFlag",
													"type": "Boolean",
													"physicalType": "bit"
												},
												"sink": {
													"name": "FinishedGoodsFlag",
													"type": "Boolean"
												}
											},
											{
												"source": {
													"name": "Color",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "Color",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "SafetyStockLevel",
													"type": "Int16",
													"physicalType": "smallint"
												},
												"sink": {
													"name": "SafetyStockLevel",
													"type": "Int16"
												}
											},
											{
												"source": {
													"name": "ReorderPoint",
													"type": "Int16",
													"physicalType": "smallint"
												},
												"sink": {
													"name": "ReorderPoint",
													"type": "Int16"
												}
											},
											{
												"source": {
													"name": "ListPrice",
													"type": "Decimal",
													"physicalType": "money",
													"scale": 4,
													"precision": 19
												},
												"sink": {
													"name": "ListPrice",
													"type": "Decimal"
												}
											},
											{
												"source": {
													"name": "Size",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "Size",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "SizeRange",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "SizeRange",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "Weight",
													"type": "Double",
													"physicalType": "float"
												},
												"sink": {
													"name": "Weight",
													"type": "Double"
												}
											},
											{
												"source": {
													"name": "DaysToManufacture",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "DaysToManufacture",
													"type": "Int32"
												}
											},
											{
												"source": {
													"name": "ProductLine",
													"type": "String",
													"physicalType": "nchar"
												},
												"sink": {
													"name": "ProductLine",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "DealerPrice",
													"type": "Decimal",
													"physicalType": "money",
													"scale": 4,
													"precision": 19
												},
												"sink": {
													"name": "DealerPrice",
													"type": "Decimal"
												}
											},
											{
												"source": {
													"name": "Class",
													"type": "String",
													"physicalType": "nchar"
												},
												"sink": {
													"name": "Class",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "Style",
													"type": "String",
													"physicalType": "nchar"
												},
												"sink": {
													"name": "Style",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "ModelName",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "ModelName",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "LargePhoto",
													"type": "Byte[]",
													"physicalType": "varbinary"
												},
												"sink": {
													"name": "LargePhoto",
													"type": "Byte[]"
												}
											},
											{
												"source": {
													"name": "EnglishDescription",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "EnglishDescription",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "FrenchDescription",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "FrenchDescription",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "ChineseDescription",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "ChineseDescription",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "ArabicDescription",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "ArabicDescription",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "HebrewDescription",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "HebrewDescription",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "ThaiDescription",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "ThaiDescription",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "GermanDescription",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "GermanDescription",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "JapaneseDescription",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "JapaneseDescription",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "TurkishDescription",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "TurkishDescription",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "StartDate",
													"type": "DateTime",
													"physicalType": "datetime"
												},
												"sink": {
													"name": "StartDate",
													"type": "DateTime"
												}
											},
											{
												"source": {
													"name": "EndDate",
													"type": "DateTime",
													"physicalType": "datetime"
												},
												"sink": {
													"name": "EndDate",
													"type": "DateTime"
												}
											},
											{
												"source": {
													"name": "Status",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "Status",
													"type": "String"
												}
											}
										],
										"typeConversion": true,
										"typeConversionSettings": {
											"allowDataTruncation": true,
											"treatBooleanAsNumber": false
										}
									}
								}
							},
							{
								"source": {
									"table": "DimProductCategory"
								},
								"destination": {
									"table": "DimProductCategory"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"mappings": [
											{
												"source": {
													"name": "ProductCategoryKey",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "ProductCategoryKey",
													"type": "Int32"
												}
											},
											{
												"source": {
													"name": "ProductCategoryAlternateKey",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "ProductCategoryAlternateKey",
													"type": "Int32"
												}
											},
											{
												"source": {
													"name": "EnglishProductCategoryName",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "EnglishProductCategoryName",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "SpanishProductCategoryName",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "SpanishProductCategoryName",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "FrenchProductCategoryName",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "FrenchProductCategoryName",
													"type": "String"
												}
											}
										],
										"typeConversion": true,
										"typeConversionSettings": {
											"allowDataTruncation": true,
											"treatBooleanAsNumber": false
										}
									}
								}
							},
							{
								"source": {
									"table": "DimProductSubcategory"
								},
								"destination": {
									"table": "DimProductSubcategory"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"mappings": [
											{
												"source": {
													"name": "ProductSubcategoryKey",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "ProductSubcategoryKey",
													"type": "Int32"
												}
											},
											{
												"source": {
													"name": "ProductSubcategoryAlternateKey",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "ProductSubcategoryAlternateKey",
													"type": "Int32"
												}
											},
											{
												"source": {
													"name": "EnglishProductSubcategoryName",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "EnglishProductSubcategoryName",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "SpanishProductSubcategoryName",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "SpanishProductSubcategoryName",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "FrenchProductSubcategoryName",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "FrenchProductSubcategoryName",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "ProductCategoryKey",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "ProductCategoryKey",
													"type": "Int32"
												}
											}
										],
										"typeConversion": true,
										"typeConversionSettings": {
											"allowDataTruncation": true,
											"treatBooleanAsNumber": false
										}
									}
								}
							},
							{
								"source": {
									"table": "FactInternetSales"
								},
								"destination": {
									"table": "FactInternetSales"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"mappings": [
											{
												"source": {
													"name": "ProductKey",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "ProductKey",
													"type": "Int32"
												}
											},
											{
												"source": {
													"name": "OrderDateKey",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "OrderDateKey",
													"type": "Int32"
												}
											},
											{
												"source": {
													"name": "DueDateKey",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "DueDateKey",
													"type": "Int32"
												}
											},
											{
												"source": {
													"name": "ShipDateKey",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "ShipDateKey",
													"type": "Int32"
												}
											},
											{
												"source": {
													"name": "CustomerKey",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "CustomerKey",
													"type": "Int32"
												}
											},
											{
												"source": {
													"name": "PromotionKey",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "PromotionKey",
													"type": "Int32"
												}
											},
											{
												"source": {
													"name": "CurrencyKey",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "CurrencyKey",
													"type": "Int32"
												}
											},
											{
												"source": {
													"name": "SalesTerritoryKey",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "SalesTerritoryKey",
													"type": "Int32"
												}
											},
											{
												"source": {
													"name": "SalesOrderNumber",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "SalesOrderNumber",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "SalesOrderLineNumber",
													"type": "Byte",
													"physicalType": "tinyint"
												},
												"sink": {
													"name": "SalesOrderLineNumber",
													"type": "Byte"
												}
											},
											{
												"source": {
													"name": "RevisionNumber",
													"type": "Byte",
													"physicalType": "tinyint"
												},
												"sink": {
													"name": "RevisionNumber",
													"type": "Byte"
												}
											},
											{
												"source": {
													"name": "OrderQuantity",
													"type": "Int16",
													"physicalType": "smallint"
												},
												"sink": {
													"name": "OrderQuantity",
													"type": "Int16"
												}
											},
											{
												"source": {
													"name": "UnitPrice",
													"type": "Decimal",
													"physicalType": "money"
												},
												"sink": {
													"name": "UnitPrice",
													"type": "Decimal"
												}
											},
											{
												"source": {
													"name": "ExtendedAmount",
													"type": "Decimal",
													"physicalType": "money"
												},
												"sink": {
													"name": "ExtendedAmount",
													"type": "Decimal"
												}
											},
											{
												"source": {
													"name": "UnitPriceDiscountPct",
													"type": "Double",
													"physicalType": "float"
												},
												"sink": {
													"name": "UnitPriceDiscountPct",
													"type": "Double"
												}
											},
											{
												"source": {
													"name": "DiscountAmount",
													"type": "Double",
													"physicalType": "float"
												},
												"sink": {
													"name": "DiscountAmount",
													"type": "Double"
												}
											},
											{
												"source": {
													"name": "ProductStandardCost",
													"type": "Decimal",
													"physicalType": "money"
												},
												"sink": {
													"name": "ProductStandardCost",
													"type": "Decimal"
												}
											},
											{
												"source": {
													"name": "TotalProductCost",
													"type": "Decimal",
													"physicalType": "money"
												},
												"sink": {
													"name": "TotalProductCost",
													"type": "Decimal"
												}
											},
											{
												"source": {
													"name": "SalesAmount",
													"type": "Decimal",
													"physicalType": "money"
												},
												"sink": {
													"name": "SalesAmount",
													"type": "Decimal"
												}
											},
											{
												"source": {
													"name": "TaxAmt",
													"type": "Decimal",
													"physicalType": "money"
												},
												"sink": {
													"name": "TaxAmt",
													"type": "Decimal"
												}
											},
											{
												"source": {
													"name": "Freight",
													"type": "Decimal",
													"physicalType": "money"
												},
												"sink": {
													"name": "Freight",
													"type": "Decimal"
												}
											},
											{
												"source": {
													"name": "CarrierTrackingNumber",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "CarrierTrackingNumber",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "CustomerPONumber",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "CustomerPONumber",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "OrderDate",
													"type": "DateTime",
													"physicalType": "datetime"
												},
												"sink": {
													"name": "OrderDate",
													"type": "DateTime"
												}
											},
											{
												"source": {
													"name": "DueDate",
													"type": "DateTime",
													"physicalType": "datetime"
												},
												"sink": {
													"name": "DueDate",
													"type": "DateTime"
												}
											},
											{
												"source": {
													"name": "ShipDate",
													"type": "DateTime",
													"physicalType": "datetime"
												},
												"sink": {
													"name": "ShipDate",
													"type": "DateTime"
												}
											}
										],
										"typeConversion": true,
										"typeConversionSettings": {
											"allowDataTruncation": true,
											"treatBooleanAsNumber": false
										}
									}
								}
							}
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_ehs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DifferentDept')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select e.BusinessEntityID, e.JobTitle, e.BirthDate, e.HireDate, e.MaritalStatus, d.departmentid from HumanResources.Employee as e inner join HumanResources.EmployeeDepartmentHistory as d on e.BusinessEntityID = d.BusinessEntityID where DepartmentID=@{item().DepartmentID}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"tableOption": "autoCreate"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SqlServerTable2",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlTable1",
											"type": "DatasetReference",
											"parameters": {
												"tablename": "@item().Name"
											}
										}
									]
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerTable2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCDpipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SCD-DataFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SalesLtCustomer": {},
									"DimCustomer": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/SCD-DataFlow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/triggeredInsan')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "JustDoCopy",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceFile": "[parameters('triggeredInsan_properties_JustDoCopy_parameters_SourceFile')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/tejalcontainer/blobs/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('triggeredInsan_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/JustDoCopy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ass43')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ConditionalSplit1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ConditionalSplit1')]"
			]
		}
	]
}